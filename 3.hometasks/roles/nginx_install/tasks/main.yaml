---
- name: create nginx repo definition
  copy:
    src: nginx.repo
    dest: /etc/yum.repos.d/nginx.repo
    owner: root
    group: root
    mode: 0644

- name: install nginx
  yum:
    name: nginx
    update_cache: true
    state: present

- name: copy main nginx config file
  copy:
    src: files/nginx.conf
    dest: /etc/nginx/nginx.conf
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: copy site's nginx config file
  template:
    src: templates/nginx.conf.j2
    dest: "/etc/nginx/conf.d/{{ server_hostname }}.conf"
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: copy index.html
  template:
    src: templates/index.html.j2
    dest: "{{ nginx_root_dir }}/index.html"
    owner: root
    group: root
    mode: 0644
  notify: restart nginx

- name: Check NGINX configs
  shell: "/usr/sbin/nginx -t"
  register: nginx_config_status
  ignore_errors: yes

- name: NGINX test status
  debug:
    msg: "{{ nginx_config_status.stderr_lines }}"
  failed_when: nginx_config_status.rc == 1  

- name: ensure nginx is enabled and started
  service:
    name: nginx
    state: started
    enabled: true

- name: Populate service facts
  service_facts:
  register: service_facts_list
  
- name: Ensure firewalld rule for nginx is enabled
  firewalld:
    port: "{{ port }}/tcp"
    permanent: true
    state: enabled
    immediate: true
  loop:
    - "{{ nginx_port_no_tls }}"
    - "{{ nginx_port_tls }}"
  loop_control:
    loop_var: port     
  when: service_facts_list.ansible_facts.services["firewalld.service"].state == "running"  
